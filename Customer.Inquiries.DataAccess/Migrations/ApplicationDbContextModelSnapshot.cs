// <auto-generated />
using System;
using Customer.Inquiries.DataAccess.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Customer.Inquiries.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Customer.Inquiries.DataAccess.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<long>("MobileNumber");

                    b.Property<DateTimeOffset?>("UpdatedDate");

                    b.HasKey("CustomerId");

                    b.HasIndex("ContactEmail")
                        .IsUnique();

                    b.HasIndex("MobileNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Customer.Inquiries.DataAccess.Models.Transaction", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<long>("CustomerId");

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<int>("Status");

                    b.Property<DateTimeOffset>("TransactionDateTime");

                    b.Property<DateTimeOffset?>("UpdatedDate");

                    b.HasKey("TransactionId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Customer.Inquiries.DataAccess.Models.Transaction", b =>
                {
                    b.HasOne("Customer.Inquiries.DataAccess.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
